@require: stdjabook
@require: itemize
@require: annot
@require: code

@require: base/typeset/base
@require: base/float

% @require: csvtable/csvtable
@import: ../src/csvtable

open EasyTableAlias

% Document-local function definition
let-inline \show-float f =
  f
  |> Float.to-string
  |> embed-string

let-inline \show-string s = 
  embed-string s

in

document (|
  title = {csvtable Manual};
  author = {qwjyh};
  show-title = true;
  show-toc = true;
|) '<
  +section{概要}<
    +p{
      外部のCSVファイルを読み込んで\SATySFi;上の表に埋め込みます。
      CSVパッケージおよびEasytableパッケージを使用しており、オプションとしてEasytableのインターフェースを用いたスタイルを適用したり、CSVの区切り文字を変更したりすることができます。
    }
  >
  +section{使い方}<
    +code(``\csvtable(`file.csv`);``);
    +code(``+csvtable(`file.csv`);``);
    +p{
      でCSVファイルを読み込み、インラインテキスト中およびブロックテキスト中に表を埋め込みます。
      デフォルトではCSVファイルの列数の最大値で折り返し、値はそれぞれのセルに右揃えで配置されます。
      列が足りない場合は空白のセルで埋められます。
      なお、\SATySFi;の制約上、\code(`..`);を含む\code(`path`);は使用できません。
    }
    +code(``\csvtable(`sample1.csv`);``);
    +pn{
      \code(`sample1.csv`);の内容
    }
    +file-code(`./sample1.csv`);
    +csvtable(`sample1.csv`);
    +code(``+csvtable(`/source/sample7.csv`);``);
    +pn{
      \code(`source/sample7.csv`);の内容
    }
    +file-code(`./source/sample7.csv`);
    +csvtable(`/source/sample7.csv`);
    +subsection{体裁に関するオプション引数}<
      +p{
        オプション引数として、第一引数にEasytableの\code(`ruleptn`);のリスト、及び第二引数に\code(`cellfmt`);のリストを与えることで、Easytableと同様、中央揃えや左揃えにしたり幅を指定することができます。
        その際、プリアンブルに\code(`open EasyTableAlias`);と記述することで簡潔なコードにすることができます。
        適宜\code(`?*`);を用いて省略を明示してください。
        また、引数の詳細はEasytableのドキュメントを参照してください。
      }
      +code(``\csvtable?*?:[l;c;r](`./sample2.csv`);``);
      +p{\csvtable?*?:[l;c;r](`./sample2.csv`);}
      +code(``
      +csvtable?:[t; b; m 1; v 0; v 1]
      ?:[lw 120pt; c; r; r](`./source/sample3.csv`);
      ``);
      +csvtable?:[t; b; m 1; v 0; v 1]
      ?:[lw 120pt; c; r; r](`./source/sample3.csv`);
    >
    +subsection{CSVのパースに関するオプション引数}<
      +p{
        第三引数に\code(`string`);を渡すことによって、CSVの区切り文字を指定することが出来ます(デフォルトは\code(`,`);です)。
        スペースを区切り文字として使用する際はSATySFiの\code(`string`);の記法に則り、\code(`` #` `# ``);と書きます。
      }
      +code(``
      +csvtable?:[rect]?*?:(`:`)(`./source/sample4.csv`);
      ``);
      +csvtable?:[rect]?*?:(`:`)(`./source/sample4.csv`);
    >
    +subsection{CSVパース時の実行時エラー}<
      +p{
        予期しない文字が出現した場合や予期しない文字の終了があった場合に実行時エラーが出る可能性があります。
        予期しない文字が出現した場合には
      }
      +code(``
      CSV parser error with char: p at 3, 1
      ``);
      +pn{のように、予期しない文字そのものとその文字のあった行番号、行における位置をメッセージに表示します。}
      +p{また、予期しない文字の終了があった場合は}
      +code(``
      CSV parser error (EOI)
      ``);
      +pn{と出力します。}
      % the line below contains error
      % +csvtable(`./source/sample5.csv`);
    >
    +subsection{ヘッダーを上書きするオプション}<
      +p{
        第四引数に\code(`inline-text list`);を渡すことで、ヘッダーつまり表の1行目を上書きすることができます。
        \code(`inline-text list`);型なのでもちろん数式を表示させることや画像や表を埋め込むこともできます。
        \code(`inline-text list`);\code(`[{a}; {b}; {c};]`);の糖衣構文\code(`{| a | b | c |}`);を使えば簡潔に書くことができます。
      }
      +code(```
      +p{
        \csvtable?*?*?*?:({
          | Program
          | Answer A
          | Answer B
          | ${Time} A
          | ${Time} B
          | \csvtable?:[t; b; m 1]?:[l; c; r;](`./sample2.csv`);
        |})(`./source/sample7.csv`);
      }
      +csvtable?:[
        bg-a (Color.gray 0.9);
        bg-r (Color.gray 0.7) 0 1;
        t; b; m 1;
      ]?:[l; c; c; r; r]?*?:({
        | Program
        | Answer A
        | Answer B
        | ${Time} A
        | ${Time} B
        | \csvtable?:[t; b; m 1]?:[l; c; r;](`./sample2.csv`);
      |})(`./source/sample7.csv`);
      ```);
      +p{
        \csvtable?*?*?*?:({
          | Program
          | Answer A
          | Answer B
          | ${Time} A
          | ${Time} B
          | \csvtable?:[t; b; m 1]?:[l; c; r;](`./sample2.csv`);
        |})(`./source/sample7.csv`);
      }
      +csvtable?:[
        bg-a (Color.gray 0.9);
        bg-r (Color.gray 0.7) 0 1;
        t; b; m 1;
      ]?:[l; c; c; r; r]?*?:({
        | Program
        | Answer A
        | Answer B
        | ${Time} A
        | ${Time} B
        | \csvtable?:[t; b; m 1]?:[l; c; r;](`./sample2.csv`);
      |})(`./source/sample7.csv`);
      +p{
        \emph{列の数について:}
        上の1つ目の例のように、\code(`headers`);としてCSVの列数の最大値より長いリストを与えた場合、
        表の列の数も\code(`headers`);の長さに従います。
        しかし、上の2つ目の例のように\code(`cellfmt`);を与えた場合はそれに従った列の折り返しをします。
        \footnote{
          従って、1行しかないCSVを与えて\code(`header`);を指定すると、
          CSVの内容にかかわらずに\code(`easytable`);を使った場合とほぼ同等の表を作ることができます。
        }
      }
      +file-code(`./sample1.csv`);
    >
  >
>
